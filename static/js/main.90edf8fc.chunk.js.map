{"version":3,"sources":["assets/images/moon-regular.svg","Header.jsx","CountryBox.jsx","Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","props","state","mode","onClick","this","changeMode","id","src","moon","alt","React","Component","CountryBox","className","country","flag","name","population","toString","replace","region","capital","Home","openSelect","error","countries","search","fetch","then","res","json","result","setState","console","log","type","v-model","aria-label","placeholder","map","i","App","bind","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","window","$mode","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUAAe,G,YAAA,IAA0B,0CC2B1BA,E,kDApBX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CAACC,KAAMF,EAAME,MAFX,E,qDAMf,OACI,iCACI,gCACI,oDACA,sBAAKC,QAASC,KAAKJ,MAAMK,WAAYC,GAAG,cAAxC,UACI,qBAAKC,IAAKC,EAAMC,IAAI,SACnBL,KAAKJ,MAAME,KAAO,YAAc,yB,GAbpCQ,IAAMC,WCgBZC,G,mLAdP,OACI,sBAAKC,UAAU,cAAf,UACI,qBAAKN,IAAKH,KAAKJ,MAAMc,QAAQC,KAAMN,IAAKL,KAAKJ,MAAMc,QAAQE,KAAK,UAChE,sBAAKH,UAAU,mBAAf,UACI,6BAAKT,KAAKJ,MAAMc,QAAQE,OACxB,8BAAG,sBAAMH,UAAU,YAAhB,0BAAgDT,KAAKJ,MAAMc,QAAQG,WAAWC,WAAWC,QAAQ,6BAA+B,UACnI,8BAAG,sBAAMN,UAAU,YAAhB,sBAA4CT,KAAKJ,MAAMc,QAAQM,UAClE,8BAAG,sBAAMP,UAAU,YAAhB,uBAA6CT,KAAKJ,MAAMc,QAAQO,qB,GAV9DX,IAAMC,YCmFhBW,E,kDAnFX,WAAYtB,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTsB,YAAY,EACZC,MAAO,KACPC,UAAW,GACXL,OAAQ,mBACRM,OAAQ,IAPG,E,gEAWE,IAAD,OAChBC,MAAM,wCACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACE,EAAKC,SAAS,CACbR,OAAO,EACPC,UAAWM,IACVE,QAAQC,IAAIH,MAKjB,SAACP,GACC,EAAKQ,SAAS,CACZR,MAAOA,S,+BAQf,OACI,gCACI,qBAAKlB,GAAG,sBAAR,SACI,qBAAKA,GAAG,yBAAR,SACI,uBAAO6B,KAAK,OAAOC,UAAQ,SAASC,aAAW,qCAAqCC,YAAY,gCAwBxG,yBAAShC,GAAG,YAAZ,SACI,qBAAKA,GAAG,gBAAR,SACKF,KAAKH,MAAMwB,UAAUc,KAAI,SAACzB,EAAQ0B,GAC/B,OAAO,cAAC,EAAD,CAAY1B,QAASA,GAAc0B,iB,GAlEnD9B,IAAMC,WC0BV8B,E,kDAtBb,WAAYzC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAACC,MAAM,GACpB,EAAKG,WAAa,EAAKA,WAAWqC,KAAhB,gBAHD,E,yDAOjBtC,KAAK4B,UAAS,SAAA/B,GAAK,MAAK,CACpBC,MAAOD,EAAMC,W,+BAKjB,OACE,sBAAKW,UAAWT,KAAKH,MAAMC,KAAO,iBAAmB,gBAArD,UACE,cAAC,EAAD,CAAQA,KAAME,KAAKH,MAAMC,KAAMG,WAAYD,KAAKC,aAChD,cAAC,EAAD,W,GAjBUK,IAAMC,WCKTgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,OAAOC,OAAQ,EAEfC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.90edf8fc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/moon-regular.5ed8bf72.svg\";","import './Header.css';\r\nimport moon from '../src/assets/images/moon-regular.svg';\r\nimport React from \"react\";\r\n\r\n\r\n\r\nclass Header extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {mode: props.mode}\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <header>\r\n                <div>\r\n                    <h1>Where in the world</h1>\r\n                    <div onClick={this.props.changeMode} id=\"select-mode\">\r\n                        <img src={moon} alt=\"moon\"/>\r\n                        {this.props.mode ? 'Dark Mode' : 'Light Mode'}\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import './CountryBox.css';\r\nimport React from \"react\";\r\n\r\n\r\n\r\nclass CountryBox extends React.Component {\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"country-box\">\r\n                <img src={this.props.country.flag} alt={this.props.country.name+' flag'}/>\r\n                <div className=\"country-box-info\">\r\n                    <h2>{this.props.country.name}</h2>\r\n                    <p><span className=\"semi-bold\">Population: </span>{this.props.country.population.toString().replace(/\\d{1,3}(?=(\\d{3})+(?!\\d))/g , \"$&,\")}</p>\r\n                    <p><span className=\"semi-bold\">Region: </span>{this.props.country.region}</p>\r\n                    <p><span className=\"semi-bold\">Capital: </span>{this.props.country.capital}</p>\r\n                 </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CountryBox;\r\n","import './Home.css';\r\nimport React from \"react\";\r\nimport CountryBox from './CountryBox';\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            openSelect: false,\r\n            error: null,\r\n            countries: [],\r\n            region: 'Filter by Region',\r\n            search: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://restcountries.eu/rest/v2/all')\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              {this.setState({\r\n                error: false,\r\n                countries: result\r\n              });console.log(result);};\r\n            },\r\n            // Remarque : il est important de traiter les erreurs ici\r\n            // au lieu d'utiliser un bloc catch(), pour ne pas passer à la trappe\r\n            // des exceptions provenant de réels bugs du composant.\r\n            (error) => {\r\n              this.setState({\r\n                error: error\r\n              });\r\n            }\r\n          )\r\n        \r\n      }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <div id=\"search-filter-panel\">\r\n                    <div id=\"search-country-wrapper\">\r\n                        <input type=\"text\" v-model=\"search\" aria-label=\"Allows you to search for a country\" placeholder=\"Search for a country...\"/>\r\n                    </div>\r\n\r\n                    {/*<div id=\"select-region-wrapper\">\r\n                        <div id=\"select-region-btn\">\r\n                        {{region}}\r\n                        <svg width=\"12px\" height=\"12px\" viewbox=\"0 0 12 12\" version=\"1.1\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns=\"http://www.w3.org/2000/svg\"><g id=\"check\"><path d=\"M0 0L12 0L12 12L0 12L0 0Z\" id=\"Rectangle\" fill=\"none\" fill-rule=\"evenodd\" stroke=\"none\" /><g id=\"expand-more\" transform=\"translate(1.5 3.75)\"><path d=\"M7.95 1.33227e-15L4.5 3.45L1.05 1.33227e-15L0 1.05L4.5 5.55L9 1.05L7.95 1.33227e-15Z\" transform=\"translate(0 -0.3)\" id=\"Shape\" fill-rule=\"evenodd\" stroke=\"none\" /></g></g></svg>\r\n                        </div>\r\n                        <transition name=\"slide\"> \r\n                        <div id=\"select-region-nav\" v-show=\"openSelect\">\r\n                            <ul>\r\n                            <li onClick={() => {region='Filter by Region'; openSelect=!openSelect;}}>All</li>\r\n                            <li onClick={region='Africa'; openSelect=!openSelect}>Africa</li>\r\n                            <li onClick={region='Americas'; openSelect=!openSelect}>America</li>\r\n                            <li onClick={region='Asia'; openSelect=!openSelect}>Asia</li>\r\n                            <li onClick={region='Europe'; openSelect=!openSelect}>Europe</li>\r\n                            <li onClick={region='Oceania'; openSelect=!openSelect}>Oceania</li>\r\n                            </ul>\r\n                        </div>\r\n                        </transition> \r\n                    </div>*/}\r\n                </div>\r\n                \r\n\r\n                <section id=\"countries\">\r\n                    <div id=\"countries-box\">\r\n                        {this.state.countries.map((country,i)=>{\r\n                            return <CountryBox country={country} key={i}/> \r\n                        })}\r\n                    </div>\r\n                </section>\r\n\r\n                {/*<section id=\"countries\">\r\n                    <div v-if=\"error\" class=\"error\">\r\n                        <p>{{error.message}}</p>\r\n                    </div>\r\n                    <div id=\"countries-box\" v-else-if=\"error === false\">\r\n                        <CountryBox v-for=\"country in countries\" :key=\"country\" v-show=\"filter(country)\" :country=\"country\" />\r\n                    </div>\r\n                </section>*/}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","//import logo from './logo.svg';\nimport './App.css';\nimport Header from './Header';\nimport Home from './Home';\nimport React from \"react\";\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {mode: true}\n    this.changeMode = this.changeMode.bind(this);\n  }\n\n  changeMode() {\n    this.setState(state => ({\n        mode: !state.mode       \n    })); \n  }\n  \n  render() {\n    return (\n      <div className={this.state.mode ? 'App light-mode' : 'App dark-mode'}>\n        <Header mode={this.state.mode} changeMode={this.changeMode}/>\n        <Home/>\n      </div>\n    );\n  }\n} \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nwindow.$mode = false;\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n//reportWebVitals(console.log)\n"],"sourceRoot":""}